        # When listing a BUNCH of stuff in a map, this needed bumping..
        map_hash_bucket_size 128;

        # For current deployement this is "app", in the future this can be the version..
        #SELECT CONCAT("\"", domain, "\""), "\"app\";"
        #FROM `wikis`
        #WHERE deleted_at IS NULL
        #LIMIT 900
        map $host $mwversion {
                default "135-app";
                
        }
        # Figure out which group of backends we might want to send the request to based on uri
        # TODO add Special:EntityData???
        map $request_uri $mwgroup {
                ~^/()(w/load.php.*) "web";
                ~^/()(w/api.php.*) "api";
                ~^/()(w/rest.php.*) "api";
                default "web";
        }

        server {
                listen 8080;
                server_name _; # This is just an invalid value which will never trigger on a real hostname.

                # Resolver is needed when using variables in proxy_pass directives...
                # https://serverfault.com/a/937172
                # https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/795#issuecomment-451257479
                resolver kube-dns.kube-system.svc.cluster.local valid=10s;

                # IP range matches current kubernetes "Pod address range"
                set_real_ip_from  10.8.0.0/14;
                real_ip_header X-Forwarded-For;
                proxy_set_header X-Forwarded-For "$http_x_forwarded_for, $realip_remote_addr";

                client_max_body_size                    1m;

                port_in_redirect off;

                proxy_set_header Host                   $http_host;

                # mitigate HTTPoxy Vulnerability
                # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
                proxy_set_header Proxy                  "";

                proxy_redirect                          off;
                proxy_request_buffering                 on;
                proxy_http_version                      1.1;

                proxy_cookie_domain                     off;
                proxy_cookie_path                       off;

                # In case of errors try the next upstream server before returning an error
                proxy_next_upstream                     error timeout;
                proxy_next_upstream_timeout             0;
                proxy_next_upstream_tries               3;

                # Custom headers to proxied server
                proxy_connect_timeout                   5s;
                proxy_send_timeout                      60s;
                proxy_read_timeout                      60s;

                proxy_buffering                         off;
                proxy_buffer_size                       4k;
                proxy_buffers                           4 4k;

                proxy_max_temp_file_size                1024m;

                # Allowoverriding the group decision using the magic header
                if ($http_x_wbstack_alpha) {
                        set $mwgroup "alpha";
                }

                ############# Locations #############

                location = /kube-probe {
                        add_header Content-Type text/plain;
                        return 200 'gangnam style!';
                }

                location ~* "^/(query/)(sparql.*)" {
                        ########################################
                        # --- START Blazegraph specific stuff ---
                        ########################################

                        # Make sure the blazegraph service is readonly
                        # TODO maybe the headers and the only GET AND POST should mvoe to the gateway?
                        proxy_set_header X-BIGDATA-MAX-QUERY-MILLIS 60000;
                        proxy_set_header X-BIGDATA-READ-ONLY "yes";
                        limit_except GET OPTIONS POST {
                            deny all;
                        }

                        add_header Access-Control-Allow-Origin * always;

                        # Cache on clients for 5 mins
                        add_header Cache-Control "public, max-age=300";
                        add_header Vary Accept;

                        # Proxy result buffering (not even sure if we want this)
                        client_body_buffer_size 1m;
                        proxy_buffering on;
                        proxy_buffer_size 16k;
                        proxy_buffers 256 16k;
                        proxy_busy_buffers_size 256k;
                        proxy_temp_file_write_size 16k;
                        proxy_max_temp_file_size 10m;
                        proxy_read_timeout 300;

                        ########################################
                        # --- END Blazegraph specific stuff ---
                        ########################################

                        rewrite "(?i)/(query/)(sparql.*)" /$2 break;
                        proxy_pass http://queryservice-gateway.default.svc.cluster.local:80;

                }

                location ~* "^/(query)(.*)" {
                        rewrite ^(/query)$ $1/ permanent;
                        rewrite "(?i)/(query)(.*)" /$2 break;
                        proxy_pass http://queryservice-ui:80;

                }

                location ~* "^/()(.*)" {
                        add_header X-WBSTACK-MW-BACKEND mediawiki-$mwversion-$mwgroup;
                        proxy_pass http://mediawiki-$mwversion-$mwgroup.default.svc.cluster.local:80;
                        rewrite "(?i)/()(.*)" /$2 break;
 
                }

        }
